[{"path":"https://metapredict.hugheylab.org/articles/guide.html","id":"find-relevant-datasets","dir":"Articles","previous_headings":"","what":"Find relevant datasets","title":"Guide to preparing data for a gene expression meta-analysis","text":"first step find microarray datasets relevant ’re interested . datasets NCBI GEO ArrayExpress, , ’s good idea also search literature.","code":""},{"path":"https://metapredict.hugheylab.org/articles/guide.html","id":"create-the-table-of-study-metadata","dir":"Articles","previous_headings":"","what":"Create the table of study metadata","title":"Guide to preparing data for a gene expression meta-analysis","text":"study metadata comma-delimited text file, one row study least following columns: currently five options studyDataType: options platformInfo depend studyDataType:","code":""},{"path":"https://metapredict.hugheylab.org/articles/guide.html","id":"download-the-gene-expression-data","dir":"Articles","previous_headings":"","what":"Download the gene expression data","title":"Guide to preparing data for a gene expression meta-analysis","text":"format gene expression data study correspond studyDataType. folders /files expression data one parent folder.","code":""},{"path":"https://metapredict.hugheylab.org/articles/guide.html","id":"if-necessary-download-packages-and-files-for-mapping-affy-probe-sets-to-entrez-gene-ids","dir":"Articles","previous_headings":"","what":"If necessary, download packages and files for mapping Affy probe sets to Entrez Gene IDs","title":"Guide to preparing data for a gene expression meta-analysis","text":"studies whose studyDataType affy_geo affy_custom, install custom CDF package(s). See installCustomCdfPackages documentation details. studies whose studyDataType affy_series_matrix, download custom CDF mapping(s). See downloadCustomCdfMappings documentation details.","code":"?metapredict::installCustomCdfPackages ?metapredict::downloadCustomCdfMappings"},{"path":"https://metapredict.hugheylab.org/articles/guide.html","id":"check-that-all-studies-whose-studydatatype-series_matrix-are-supported","dir":"Articles","previous_headings":"","what":"Check that all studies whose studyDataType == 'series_matrix' are supported","title":"Guide to preparing data for a gene expression meta-analysis","text":"Open R execute following commands, replacing “<path study metadata file>” appropriate. platforms supported still want include studies meta-analysis, need edit source metapredict package. getStudyData() function, add another else statement tells function map probes Entrez Gene IDs platform. Look code currently supported platforms see examples done. Add GPL microarray platform character vector supported platforms getSupportedPlatforms() function. Submit pull request https://github.com/hugheylab/metapredict, people can analyze data platform without going hassle!","code":"studyMetadata = read.csv('<path to study metadata file>', stringsAsFactors = FALSE) metapredict::getUnsupportedPlatforms(studyMetadata)"},{"path":"https://metapredict.hugheylab.org/articles/guide.html","id":"create-the-table-of-sample-metadata","dir":"Articles","previous_headings":"","what":"Create the table of sample metadata","title":"Guide to preparing data for a gene expression meta-analysis","text":"sample metadata comma-delimited text file, one row sample least following columns: format sample names depends studyDataType:","code":""},{"path":"https://metapredict.hugheylab.org/articles/prepare_example.html","id":"instructions","dir":"Articles","previous_headings":"","what":"Instructions","title":"Preparing to run a gene expression meta-analysis of lung cancer subtypes","text":"Install required custom CDF packages running following command R. Download following files (’re downloading subset Bhattacharjee data): Bhattacharjee adeno part 1 Bhattacharjee adeno part 2 Bhattacharjee adeno part 3 Bhattacharjee adeno part 4 Bhattacharjee squamous Bhattacharjee small-cell GSE11969 GSE29016 GSE30219 Create folder called metapredict_example. Inside metapredict_example, create folder called expression_data. Inside expression_data, create folder called Bhattacharjee. Unzip files Bhattacharjee dataset move .CEL files Bhattacharjee folder. Move GSE11969_series_matrix.txt.gz GSE29016_series_matrix.txt.gz expression_data folder. Unzip GSE30219_RAW.tar, rename resulting folder GSE30219, move expression_data folder.","code":"metapredict::installCustomCdfPackages(   c('hgu95av2hsentrezgcdf', 'hgu133plus2hsentrezgcdf'))"},{"path":"https://metapredict.hugheylab.org/articles/run_example.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Running a gene expression meta-analysis of lung cancer subtypes","text":"meta-analysis use data following four studies: Bhattacharjee GSE11969 GSE29016 GSE30219 study contains samples various lung cancer subtypes. meta-analysis, going train predictive model classifying sample adenocarcinoma (AD), squamous cell carcinoma (SQ), small-cell lung carcinoma (SCLC), identify set genes whose expression varies consisently subtypes across multiple studies.","code":""},{"path":"https://metapredict.hugheylab.org/articles/run_example.html","id":"set-the-parameters-for-the-meta-analysis","dir":"Articles","previous_headings":"","what":"Set the parameters for the meta-analysis","title":"Running a gene expression meta-analysis of lung cancer subtypes","text":"Open R set working directory metapredict_example folder previously created. ’ll load necessary packages set parameters meta-analysis. running meta-analysis , can change denovo FALSE. example, ’re going use three studies cross-validation fourth validation.","code":"library('data.table') library('metapredict') library('ggplot2') library('RColorBrewer')  parentFolderPath = 'expression_data' expressionDataFile = 'expression_data.rds' denovo = TRUE  foldidColname = 'study' className = 'class' family = 'multinomial' alpha = 0.9 discoveryStudyNames = c('Bhattacharjee', 'GSE11969', 'GSE29016') classLevels = c('AD', 'SQ', 'SCLC')"},{"path":"https://metapredict.hugheylab.org/articles/run_example.html","id":"load-the-study-and-sample-metadata","dir":"Articles","previous_headings":"","what":"Load the study and sample metadata","title":"Running a gene expression meta-analysis of lung cancer subtypes","text":"meta-analysis, files study metadata sample metadata already created.","code":"studyMetadataPath = system.file('extdata', 'study_metadata.csv', package = 'metapredict') studyMetadata = fread(studyMetadataPath)  sampleMetadataPath = system.file('extdata', 'sample_metadata.csv', package = 'metapredict') sampleMetadata = fread(sampleMetadataPath)"},{"path":"https://metapredict.hugheylab.org/articles/run_example.html","id":"load-the-gene-expression-data","dir":"Articles","previous_headings":"","what":"Load the gene expression data","title":"Running a gene expression meta-analysis of lung cancer subtypes","text":"Now ’ll load expression data study, performing normalization transformation mapping probes genes, necessary. Running getStudyDataList take minutes.","code":"if (denovo) {   esetList = getStudyDataList(parentFolderPath, studyMetadata)   saveRDS(esetList, file = expressionDataFile) } else {   esetList = readRDS(expressionDataFile)} #> Loading study Bhattacharjee... #> Loading required package: hgu95av2hsentrezgcdf #> Loading required package: AnnotationDbi #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: 'BiocGenerics' #> The following objects are masked from 'package:stats': #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from 'package:base': #>  #>     anyDuplicated, append, as.data.frame, basename, cbind, colnames, #>     dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, #>     grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget, #>     order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, #>     rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, #>     union, unique, unsplit, which.max, which.min #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #> Loading required package: IRanges #> Loading required package: S4Vectors #>  #> Attaching package: 'S4Vectors' #> The following objects are masked from 'package:data.table': #>  #>     first, second #> The following objects are masked from 'package:base': #>  #>     expand.grid, I, unname #>  #> Attaching package: 'IRanges' #> The following object is masked from 'package:data.table': #>  #>     shift #>  #> Loading study GSE11969... #> Setting options('download.file.method.GEOquery'='auto') #> Setting options('GEOquery.inmemory.gpl'=FALSE) #>  #> Loading study GSE29016... #> Loading study GSE30219... #> Loading required package: hgu133plus2hsentrezgcdf #>"},{"path":"https://metapredict.hugheylab.org/articles/run_example.html","id":"cross-study-normalization-of-discovery-datasets","dir":"Articles","previous_headings":"","what":"Cross-study normalization of discovery datasets","title":"Running a gene expression meta-analysis of lung cancer subtypes","text":"Now ’ll merge discovery datasets use ComBat perform cross-study normalization.","code":"ematList = extractExpressionData(esetList, sampleMetadata) ematDiscovery = mergeStudyData(ematList[discoveryStudyNames], sampleMetadata) #> Found3batches #> Adjusting for0covariate(s) or covariate level(s) #> Standardizing Data across genes #> Fitting L/S model and finding priors #> Finding parametric adjustments #> Adjusting the Data"},{"path":"https://metapredict.hugheylab.org/articles/run_example.html","id":"leave-one-study-out-cross-validation","dir":"Articles","previous_headings":"","what":"Leave-one-study-out cross-validation","title":"Running a gene expression meta-analysis of lung cancer subtypes","text":"running cross-validation, ’ll use sample metadata create weights foldid vectors passed cv.glmnet. metapredictCv returns list, one element value alpha. Since ’re multinomial classification (AD, SQ, SCLC), cv.glmnet uses multinomial deviance measure goodness fit (lower better).","code":"glmnetArgs = makeGlmnetArgs(   sampleMetadata[sampleMetadata$study %in% discoveryStudyNames,],   foldidColname = foldidColname)  cvFitList = metapredictCv(   ematDiscovery, sampleMetadata, yName = className,   weights = glmnetArgs$weights, foldid = glmnetArgs$foldid, alpha = alpha,   family = family, lambda.min.ratio = 0.001, keep = TRUE) cvFit = cvFitList[[1]]  plot(cvFit)"},{"path":"https://metapredict.hugheylab.org/articles/run_example.html","id":"coefficients-of-the-best-model-from-cross-validation","dir":"Articles","previous_headings":"","what":"Coefficients of the best model from cross-validation","title":"Running a gene expression meta-analysis of lung cancer subtypes","text":"Let’s look coefficients best model cross-validation (ignore warning “Stacking well defined…”). plot shows genes used predict lung cancer subtype. example, increased expression three keratins (KRT17, KRT5, KRT6A) increases probability sample SQ. number parentheses next gene symbol Entrez gene ID.","code":"fitResult = cvFit$glmnet.fit lambda = cvFit$lambda.min  plotCoefficients(fitResult, lambda, classLevels = classLevels) +   scale_fill_brewer(type = 'qual', palette = 3) +   theme(axis.text.y = element_text(size = 8)) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = #> \"none\")` instead."},{"path":"https://metapredict.hugheylab.org/articles/run_example.html","id":"expression-of-selected-genes-in-the-discovery-set","dir":"Articles","previous_headings":"","what":"Expression of selected genes in the discovery set","title":"Running a gene expression meta-analysis of lung cancer subtypes","text":"can also examine expression selected genes merged expression data. heatmap, hierarchical clustering used determine order genes order samples within class.","code":"annoNames = c('study', 'class') annoLevels = list(discoveryStudyNames, classLevels) names(annoLevels) = annoNames annoColors = list(brewer.pal(3, 'Dark2'), brewer.pal(3, 'Paired')) names(annoColors) = annoNames names(annoColors[[1]]) = annoLevels[[1]] names(annoColors[[2]]) = annoLevels[[2]]  plotExpressionHeatmap(   fitResult, lambda, ematDiscovery, sampleMetadata, annoLevels, annoColors,   classLevels = classLevels, fontsize_row = 7) #> Warning in `[.data.table`(mergeDataTable(colnames(ematMerged), #> sampleMetadata), : Both 'cols' and '..cols' exist in calling scope. Please #> remove the '..cols' variable in calling scope for clarity."},{"path":"https://metapredict.hugheylab.org/articles/run_example.html","id":"predict-subtype-for-samples-in-the-validation-dataset","dir":"Articles","previous_headings":"","what":"Predict subtype for samples in the validation dataset","title":"Running a gene expression meta-analysis of lung cancer subtypes","text":"Now ’ll test model last dataset. Internally, metapredict runs mergeStudyData combine discovery datasets validation dataset, trains predictive model samples discovery dataset predicts subtype samples validation dataset.","code":"predsList = metapredict(   ematList, studyMetadata, sampleMetadata, discoveryStudyNames, alpha = alpha,   lambda = lambda, weights = glmnetArgs$weights, family = family) #> Found4batches #> Adjusting for0covariate(s) or covariate level(s) #> Standardizing Data across genes #> Fitting L/S model and finding priors #> Finding parametric adjustments #> Adjusting the Data #> Warning in `[.data.table`(yDTM, , ..className): Both 'className' and #> '..className' exist in calling scope. Please remove the '..className' variable #> in calling scope for clarity."},{"path":"https://metapredict.hugheylab.org/articles/run_example.html","id":"confusion-matrix-for-validation-samples","dir":"Articles","previous_headings":"","what":"Confusion matrix for validation samples","title":"Running a gene expression meta-analysis of lung cancer subtypes","text":"One way check prediction accuracy multinomial classifier confusion matrix. predictions look pretty good.","code":"calcConfusionValidation(   predsList, lambda = lambda, sampleMetadata = sampleMetadata,   classLevels = classLevels) #> $GSE30219 #>          predictedClass #> trueClass AD SQ SCLC #>      AD   85  0    0 #>      SQ    9 52    0 #>      SCLC  4  0   17"},{"path":"https://metapredict.hugheylab.org/articles/run_example.html","id":"class-probabilities-for-validation-samples","dir":"Articles","previous_headings":"","what":"Class probabilities for validation samples","title":"Running a gene expression meta-analysis of lung cancer subtypes","text":"Instead looking single predicted subtype, can also look probabilities four subtypes. confusion matrix plot suggest metapredict can combine data multiple studies learn accurate classifier lung cancer subtype.","code":"plotClassProbsValidation(   predsList, sampleMetadata, className, classLevels, size = 1.5,   ggplotArgs = list(scale_color_brewer(type = 'qual', palette = 3)))"},{"path":"https://metapredict.hugheylab.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jake Hughey. Author, maintainer. Josh Schoenbachler. Author.","code":""},{"path":"https://metapredict.hugheylab.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hughey J, Schoenbachler J (2022). metapredict: Meta-analysis gene expression using elastic net. https://metapredict.hugheylab.org, https://github.com/hugheylab/metapredict.","code":"@Manual{,   title = {metapredict: Meta-analysis of gene expression using the elastic net},   author = {Jake Hughey and Josh Schoenbachler},   year = {2022},   note = {https://metapredict.hugheylab.org, https://github.com/hugheylab/metapredict}, }"},{"path":"https://metapredict.hugheylab.org/index.html","id":"metapredict","dir":"","previous_headings":"","what":"Meta-analysis of gene expression using the elastic net","title":"Meta-analysis of gene expression using the elastic net","text":"metapredict enables meta-analysis gene expression using elastic net (.e., glmnet). technical details, please check paper. just want process microarray data don’t need merge expression data perform meta-analysis, check seeker, makes fetching, processing, normalizing transcriptome data even simpler.","code":""},{"path":"https://metapredict.hugheylab.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Meta-analysis of gene expression using the elastic net","text":"Install BiocManager. use RStudio, go Tools → Global Options… → Packages → Add… (Secondary repositories), enter: Name: hugheylab Url: https://hugheylab.github.io/drat/ . can install update package entering: Alternatively, can install update package entering:","code":"if (!requireNamespace('BiocManager', quietly = TRUE))   install.packages('BiocManager') BiocManager::install('metapredict') BiocManager::install('metapredict', site_repository = 'https://hugheylab.github.io/drat/')"},{"path":"https://metapredict.hugheylab.org/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Meta-analysis of gene expression using the elastic net","text":"Go vignettes prepare data example meta-analysis, run example meta-analysis, see run meta-analysis. help using specific functions, consult reference documentation.","code":""},{"path":"https://metapredict.hugheylab.org/reference/calcConfusionCv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate confusion matrix for cross-validation. — calcConfusionCv","title":"Calculate confusion matrix for cross-validation. — calcConfusionCv","text":"Calculate confusion matrix based predictions cross-validation.","code":""},{"path":"https://metapredict.hugheylab.org/reference/calcConfusionCv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate confusion matrix for cross-validation. — calcConfusionCv","text":"","code":"calcConfusionCv(   cvFit,   lambda,   ematMerged,   sampleMetadata,   className = \"class\",   classLevels = NA )"},{"path":"https://metapredict.hugheylab.org/reference/calcConfusionCv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate confusion matrix for cross-validation. — calcConfusionCv","text":"cvFit cv.glmnet object metapredictCv(). lambda value lambda use predictions. ematMerged matrix gene expression genes samples. sampleMetadata data.frame sample metadata. className name column sampleMetadata containing true labels. classLevels Order classes confusion matrix. NA (default), function uses order cvFit.","code":""},{"path":"https://metapredict.hugheylab.org/reference/calcConfusionCv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate confusion matrix for cross-validation. — calcConfusionCv","text":"object class table.","code":""},{"path":"https://metapredict.hugheylab.org/reference/calcConfusionValidation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate confusion matrices (or matrix) for validation datasets. — calcConfusionValidation","title":"Calculate confusion matrices (or matrix) for validation datasets. — calcConfusionValidation","text":"Calculate confusion matrices based predictions validation datasets.","code":""},{"path":"https://metapredict.hugheylab.org/reference/calcConfusionValidation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate confusion matrices (or matrix) for validation datasets. — calcConfusionValidation","text":"","code":"calcConfusionValidation(   predsList,   lambda,   sampleMetadata,   className = \"class\",   classLevels = NA,   each = TRUE )"},{"path":"https://metapredict.hugheylab.org/reference/calcConfusionValidation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate confusion matrices (or matrix) for validation datasets. — calcConfusionValidation","text":"predsList list predictions metapredict(). lambda value lambda use predictions. sampleMetadata data.frame sample metadata. className name column sampleMetadata containing true labels. classLevels Order classes confusion matrix. NA (default), function uses order cvFit. logical indicating whether calculate confusion matrix validation dataset (default) one confusion matrix including datasets.","code":""},{"path":"https://metapredict.hugheylab.org/reference/calcConfusionValidation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate confusion matrices (or matrix) for validation datasets. — calcConfusionValidation","text":"isTRUE(), list objects class table. Otherwise, object class table.","code":""},{"path":"https://metapredict.hugheylab.org/reference/downloadCustomCdfMappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Download custom CDF mapping files from Brainarray. — downloadCustomCdfMappings","title":"Download custom CDF mapping files from Brainarray. — downloadCustomCdfMappings","text":"Download Brainarray custom CDF mapping files, used mapping probes genes datasets whose studyDataType 'affy_series_matrix'. See http://brainarray.mbni.med.umich.edu/Brainarray/Database/CustomCDF/CDF_download.asp.","code":""},{"path":"https://metapredict.hugheylab.org/reference/downloadCustomCdfMappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download custom CDF mapping files from Brainarray. — downloadCustomCdfMappings","text":"","code":"downloadCustomCdfMappings(cdf, path = \".\", ver = 25)"},{"path":"https://metapredict.hugheylab.org/reference/downloadCustomCdfMappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download custom CDF mapping files from Brainarray. — downloadCustomCdfMappings","text":"cdf data frame columns download (e.g., 'Mouse4302_Mm_ENTREZ') rename (e.g., 'mouse4302mmentrezgcdf'). path directory download files. ver integer version number (25 5 Jan 2021).","code":""},{"path":"https://metapredict.hugheylab.org/reference/extractExpressionData.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the expression matrices containing the desired samples. — extractExpressionData","title":"Extract the expression matrices containing the desired samples. — extractExpressionData","text":"Extract expression matrices containing desired samples.","code":""},{"path":"https://metapredict.hugheylab.org/reference/extractExpressionData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the expression matrices containing the desired samples. — extractExpressionData","text":"","code":"extractExpressionData(esetList, sampleMetadata)"},{"path":"https://metapredict.hugheylab.org/reference/extractExpressionData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the expression matrices containing the desired samples. — extractExpressionData","text":"esetList list ExpressionSets. sampleMetadata data.frame columns study sample names.","code":""},{"path":"https://metapredict.hugheylab.org/reference/extractExpressionData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the expression matrices containing the desired samples. — extractExpressionData","text":"named list matrices.","code":""},{"path":"https://metapredict.hugheylab.org/reference/getStudyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the gene expression data for one study. — getStudyData","title":"Get the gene expression data for one study. — getStudyData","text":"Load gene expression data one study, map probes Entrez Gene IDs, normalize transform expression values.","code":""},{"path":"https://metapredict.hugheylab.org/reference/getStudyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the gene expression data for one study. — getStudyData","text":"","code":"getStudyData(parentFolderPath, studyName, studyDataType, platformInfo)"},{"path":"https://metapredict.hugheylab.org/reference/getStudyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the gene expression data for one study. — getStudyData","text":"parentFolderPath Path folder contains data. studyName Name dataset load. studyDataType Type data. platformInfo Microarray platform.","code":""},{"path":"https://metapredict.hugheylab.org/reference/getStudyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the gene expression data for one study. — getStudyData","text":"ExpressionSet, unless platform data type supported, NA.","code":""},{"path":"https://metapredict.hugheylab.org/reference/getStudyDataList.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the gene expression data for multiple studies. — getStudyDataList","title":"Get the gene expression data for multiple studies. — getStudyDataList","text":"Runs getStudyData() multiple studies.","code":""},{"path":"https://metapredict.hugheylab.org/reference/getStudyDataList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the gene expression data for multiple studies. — getStudyDataList","text":"","code":"getStudyDataList(parentFolderPath, studyMetadata)"},{"path":"https://metapredict.hugheylab.org/reference/getStudyDataList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the gene expression data for multiple studies. — getStudyDataList","text":"parentFolderPath Path folder contains data. studyMetadata data.frame row corresponds one study. columns study, studyDataType, platformInfo.","code":""},{"path":"https://metapredict.hugheylab.org/reference/getStudyDataList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the gene expression data for multiple studies. — getStudyDataList","text":"named list ExpressionSets.","code":""},{"path":"https://metapredict.hugheylab.org/reference/getSupportedPlatforms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the GPLs for microarray platforms that are currently supported. — getSupportedPlatforms","title":"Get the GPLs for microarray platforms that are currently supported. — getSupportedPlatforms","text":"Get GPLs microarray platforms currently supported.","code":""},{"path":"https://metapredict.hugheylab.org/reference/getSupportedPlatforms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the GPLs for microarray platforms that are currently supported. — getSupportedPlatforms","text":"","code":"getSupportedPlatforms()"},{"path":"https://metapredict.hugheylab.org/reference/getSupportedPlatforms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the GPLs for microarray platforms that are currently supported. — getSupportedPlatforms","text":"data.table currently supported GPLs relevant information.","code":""},{"path":"https://metapredict.hugheylab.org/reference/getUnsupportedPlatforms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the GPLs for unsupported microarray platforms. — getUnsupportedPlatforms","title":"Get the GPLs for unsupported microarray platforms. — getUnsupportedPlatforms","text":"Get GPLs unsupported microarray platforms.","code":""},{"path":"https://metapredict.hugheylab.org/reference/getUnsupportedPlatforms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the GPLs for unsupported microarray platforms. — getUnsupportedPlatforms","text":"","code":"getUnsupportedPlatforms(studyMetadata)"},{"path":"https://metapredict.hugheylab.org/reference/getUnsupportedPlatforms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the GPLs for unsupported microarray platforms. — getUnsupportedPlatforms","text":"studyMetadata data.frame study metadata, columns studyDataType platformInfo.","code":""},{"path":"https://metapredict.hugheylab.org/reference/getUnsupportedPlatforms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the GPLs for unsupported microarray platforms. — getUnsupportedPlatforms","text":"vector platforms studyDataType 'series_matrix' platformInfo supported.","code":""},{"path":"https://metapredict.hugheylab.org/reference/installCustomCdfPackages.html","id":null,"dir":"Reference","previous_headings":"","what":"Install custom CDF packages from Brainarray. — installCustomCdfPackages","title":"Install custom CDF packages from Brainarray. — installCustomCdfPackages","text":"Install Brainarray custom CDFs processing raw Affymetrix data. See http://brainarray.mbni.med.umich.edu/Brainarray/Database/CustomCDF/CDF_download.asp.","code":""},{"path":"https://metapredict.hugheylab.org/reference/installCustomCdfPackages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install custom CDF packages from Brainarray. — installCustomCdfPackages","text":"","code":"installCustomCdfPackages(pkgs, ver = 25)"},{"path":"https://metapredict.hugheylab.org/reference/installCustomCdfPackages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install custom CDF packages from Brainarray. — installCustomCdfPackages","text":"pkgs character vector package names, e.g., 'hgu133ahsentrezgcdf' ver integer version number (25 5 Jan 2021)","code":""},{"path":"https://metapredict.hugheylab.org/reference/makeCoefDt.html","id":null,"dir":"Reference","previous_headings":"","what":"Make data.table of non-zero coefficients from a glmnet model. — makeCoefDt","title":"Make data.table of non-zero coefficients from a glmnet model. — makeCoefDt","text":"Make sorted data.table non-zero coefficients logistic multinomial glmnet model.","code":""},{"path":"https://metapredict.hugheylab.org/reference/makeCoefDt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make data.table of non-zero coefficients from a glmnet model. — makeCoefDt","text":"","code":"makeCoefDt(fitResult, lambda, decreasing = TRUE, classLevels = NA)"},{"path":"https://metapredict.hugheylab.org/reference/makeCoefDt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make data.table of non-zero coefficients from a glmnet model. — makeCoefDt","text":"fitResult glmnet object. lambda value lambda obtain coefficients. decreasing logical passed order. classLevels order columns resulting data.table.","code":""},{"path":"https://metapredict.hugheylab.org/reference/makeCoefDt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make data.table of non-zero coefficients from a glmnet model. — makeCoefDt","text":"data.table.","code":""},{"path":"https://metapredict.hugheylab.org/reference/makeGlmnetArgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Make arguments for glmnet. — makeGlmnetArgs","title":"Make arguments for glmnet. — makeGlmnetArgs","text":"Make vectors foldid weights used leave-one-study-cross-validation glmnet::glmnet().","code":""},{"path":"https://metapredict.hugheylab.org/reference/makeGlmnetArgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make arguments for glmnet. — makeGlmnetArgs","text":"","code":"makeGlmnetArgs(metadata, foldidColname = \"study\", sampleColname = \"sample\")"},{"path":"https://metapredict.hugheylab.org/reference/makeGlmnetArgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make arguments for glmnet. — makeGlmnetArgs","text":"metadata data.frame containing row observation. foldidColname column use grouping observations. sampleColname column contains sample names.","code":""},{"path":"https://metapredict.hugheylab.org/reference/makeGlmnetArgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make arguments for glmnet. — makeGlmnetArgs","text":"named list. foldid vector integers weights vector weights, study weighted equally.","code":""},{"path":"https://metapredict.hugheylab.org/reference/mergeMatchStudyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge gene expression from different platforms that was measured on the same biological samples. — mergeMatchStudyData","title":"Merge gene expression from different platforms that was measured on the same biological samples. — mergeMatchStudyData","text":"Merge gene expression different platforms measured biological samples.","code":""},{"path":"https://metapredict.hugheylab.org/reference/mergeMatchStudyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge gene expression from different platforms that was measured on the same biological samples. — mergeMatchStudyData","text":"","code":"mergeMatchStudyData(   ematAtomicList,   studyMetadataAtomic,   matchStudyColname,   sampleMetadataAtomic,   matchSampleColname,   mergeFunc = function(x) mean(x, na.rm = TRUE) )"},{"path":"https://metapredict.hugheylab.org/reference/mergeMatchStudyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge gene expression from different platforms that was measured on the same biological samples. — mergeMatchStudyData","text":"ematAtomicList list expression matrices. studyMetadataAtomic data frame study metadata. matchStudyColname column studyMetadataAtomic used match studies. sampleMetadataAtomic data frame sample metadata. matchSampleColname column sampleMetadataAtomic used match samples. mergeFunc function summarize multiple gene expression values.","code":""},{"path":"https://metapredict.hugheylab.org/reference/mergeMatchStudyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge gene expression from different platforms that was measured on the same biological samples. — mergeMatchStudyData","text":"named list. ematList Named list expression matrices. studyMetadata data.frame study metadata. sampleMetadata data.frame sample metadata.","code":""},{"path":"https://metapredict.hugheylab.org/reference/mergeStudyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge gene expression data from multiple studies. — mergeStudyData","title":"Merge gene expression data from multiple studies. — mergeStudyData","text":"Merge gene expression data multiple studies, keeping genes measured dataset, optionally perform cross-study normalization using sva::ComBat().","code":""},{"path":"https://metapredict.hugheylab.org/reference/mergeStudyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge gene expression data from multiple studies. — mergeStudyData","text":"","code":"mergeStudyData(   ematList,   sampleMetadata,   batchColname = \"study\",   covariateName = NA,   batchCorrection = TRUE,   parPrior = TRUE )"},{"path":"https://metapredict.hugheylab.org/reference/mergeStudyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge gene expression data from multiple studies. — mergeStudyData","text":"ematList list expression matrices. sampleMetadata data.frame sample metadata. batchColname column sampleMetadata containing batch information ComBat. covariateName column sampleMetadata containing additional covariates ComBat besides batch. batchCorrection TRUE indicates cross-study normalization performed, FALSE indicates datasets merged without performing normalization. parPrior passed ComBat's par.prior argument.","code":""},{"path":"https://metapredict.hugheylab.org/reference/mergeStudyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge gene expression data from multiple studies. — mergeStudyData","text":"matrix expression genes samples.","code":""},{"path":"https://metapredict.hugheylab.org/reference/metapredict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict the response variable in validation datasets. — metapredict","title":"Predict the response variable in validation datasets. — metapredict","text":"Merge discovery datasets validation dataset, train glmnet model samples discovery datasets, predicts response variable samples respective validation dataset.","code":""},{"path":"https://metapredict.hugheylab.org/reference/metapredict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict the response variable in validation datasets. — metapredict","text":"","code":"metapredict(   ematList,   studyMetadata,   sampleMetadata,   discoveryStudyNames,   alpha,   lambda,   weights,   batchColname = \"study\",   covariateName = NA,   className = \"class\",   type = \"response\",   ... )"},{"path":"https://metapredict.hugheylab.org/reference/metapredict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict the response variable in validation datasets. — metapredict","text":"ematList Named list expression matrices. studyMetadata data.frame study metadata. sampleMetadata data.frame sample metadata, rownames corresponding sample names. discoveryStudyNames vector study names training. alpha value alpha elastic net mixing parameter. lambda value regularization parameter. weights vector weights training glmnet model. batchColname column sampleMetadata containing batch information sva::ComBat(). covariateName column sampleMetadata containing additional covariates sva::ComBat() besides batch. className column sampleMetadata containing values response variable. type type prediction make, passed glmnet::predict.glmnet(). ... arguments passed glmnet::glmnet().","code":""},{"path":"https://metapredict.hugheylab.org/reference/metapredict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict the response variable in validation datasets. — metapredict","text":"named list objects glmnet::predict.glmnet().","code":""},{"path":"https://metapredict.hugheylab.org/reference/metapredictCv.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform cross-validation of merged gene expression data. — metapredictCv","title":"Perform cross-validation of merged gene expression data. — metapredictCv","text":"Run cross-validation predict response variable gene expression data across multiple studies.","code":""},{"path":"https://metapredict.hugheylab.org/reference/metapredictCv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform cross-validation of merged gene expression data. — metapredictCv","text":"","code":"metapredictCv(   ematMerged,   sampleMetadata,   weights,   alpha,   nFolds = 10,   foldid = NA,   nRepeats = 3,   yName = \"class\",   addlFeatureColnames = NA,   ... )"},{"path":"https://metapredict.hugheylab.org/reference/metapredictCv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform cross-validation of merged gene expression data. — metapredictCv","text":"ematMerged matrix gene expression genes samples. sampleMetadata data.frame sample metadata, rownames corresponding sample names. weights vector weights. alpha vector values alpha, elastic net mixing parameter. nFolds number folds. Ignored, foldid NA. foldid vector values specifying fold observation . nRepeats number times perform cross-validation. Ignored, foldid NA. yName column sampleMetadata containing values response variable. addlFeatureColnames optional vector column names containing features used predicting response variable. ... arguments passed glmnet::cv.glmnet().","code":""},{"path":"https://metapredict.hugheylab.org/reference/metapredictCv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform cross-validation of merged gene expression data. — metapredictCv","text":"list cv.glmnet objects.","code":""},{"path":"https://metapredict.hugheylab.org/reference/plotClassProbsCv.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot class probabilities for samples from cross-validation. — plotClassProbsCv","title":"Plot class probabilities for samples from cross-validation. — plotClassProbsCv","text":"Make gtable consisting multiple ggplots, one dataset used cross-validation. Within class, samples sorted probability true class.","code":""},{"path":"https://metapredict.hugheylab.org/reference/plotClassProbsCv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot class probabilities for samples from cross-validation. — plotClassProbsCv","text":"","code":"plotClassProbsCv(   cvFit,   lambda,   ematMerged,   sampleMetadata,   className = \"class\",   classLevels = NA,   size = 1.5,   ggplotArgs = NA )"},{"path":"https://metapredict.hugheylab.org/reference/plotClassProbsCv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot class probabilities for samples from cross-validation. — plotClassProbsCv","text":"cvFit cv.glmnet object metapredictCv(). lambda value lambda use cvFit. ematMerged matrix gene expression genes samples. sampleMetadata data.frame sample metadata. className column sampleMetadata containing values response variable. classLevels Preferred order classes. size Point size, passed ggplot2::geom_point(). ggplotArgs List additional arguments add ggplot.","code":""},{"path":"https://metapredict.hugheylab.org/reference/plotClassProbsCv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot class probabilities for samples from cross-validation. — plotClassProbsCv","text":"ggplot object constructed cowplot::plot_grid().","code":""},{"path":"https://metapredict.hugheylab.org/reference/plotClassProbsValidation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot class probabilities for samples from multiple validation datasets. — plotClassProbsValidation","title":"Plot class probabilities for samples from multiple validation datasets. — plotClassProbsValidation","text":"Make gtable consisting multiple ggplots, one validation dataset. Within class, samples sorted probability true class.","code":""},{"path":"https://metapredict.hugheylab.org/reference/plotClassProbsValidation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot class probabilities for samples from multiple validation datasets. — plotClassProbsValidation","text":"","code":"plotClassProbsValidation(   predsList,   sampleMetadata,   className,   classLevels,   size = 1.5,   ggplotArgs = NA )"},{"path":"https://metapredict.hugheylab.org/reference/plotClassProbsValidation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot class probabilities for samples from multiple validation datasets. — plotClassProbsValidation","text":"predsList Result metapredict(). sampleMetadata data.frame sample metadata. className column sampleMetadata containing values response variable. classLevels Preferred order classes. size Point size, passed ggplot2::geom_point(). ggplotArgs List additional arguments add ggplot.","code":""},{"path":"https://metapredict.hugheylab.org/reference/plotClassProbsValidation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot class probabilities for samples from multiple validation datasets. — plotClassProbsValidation","text":"ggplot object constructed cowplot::plot_grid().","code":""},{"path":"https://metapredict.hugheylab.org/reference/plotCoefficients.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot coefficients for a gene expression meta-analysis. — plotCoefficients","title":"Plot coefficients for a gene expression meta-analysis. — plotCoefficients","text":"Make ggplot coefficients glmnet object trained gene expression meta-analysis (either logistic multinomial classification).","code":""},{"path":"https://metapredict.hugheylab.org/reference/plotCoefficients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot coefficients for a gene expression meta-analysis. — plotCoefficients","text":"","code":"plotCoefficients(   fitResult,   lambda,   classLevels = NA,   decreasing = FALSE,   geneIdOrder = NA,   org = \"org.Hs.eg\" )"},{"path":"https://metapredict.hugheylab.org/reference/plotCoefficients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot coefficients for a gene expression meta-analysis. — plotCoefficients","text":"fitResult glmnet object. lambda value lambda use fitResult. classLevels Order classes confusion matrix. NA (default), function uses order fitResult. decreasing logical indicating whether sort genes decreasing coefficient. geneIdOrder Optional character array Entrez Gene IDs specifying order genes. NA (default), order makeCoefDt() used. org Name package mapping Entrez Gene IDs gene symbols, passed data argument annotate::lookUp().","code":""},{"path":"https://metapredict.hugheylab.org/reference/plotCoefficients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot coefficients for a gene expression meta-analysis. — plotCoefficients","text":"ggplot object.","code":""},{"path":"https://metapredict.hugheylab.org/reference/plotExpressionHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of merged gene expression data. — plotExpressionHeatmap","title":"Plot heatmap of merged gene expression data. — plotExpressionHeatmap","text":"Make heatmap gene expression multiple datasets.","code":""},{"path":"https://metapredict.hugheylab.org/reference/plotExpressionHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of merged gene expression data. — plotExpressionHeatmap","text":"","code":"plotExpressionHeatmap(   fitResult,   lambda,   ematMerged,   sampleMetadata,   annoLevels,   annoColors = NA,   clusterTogether = FALSE,   geneIdOrder = NA,   className = \"class\",   classLevels = NA,   org = \"org.Hs.eg\",   maxVal = 3,   ... )"},{"path":"https://metapredict.hugheylab.org/reference/plotExpressionHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of merged gene expression data. — plotExpressionHeatmap","text":"fitResult glmnet object. lambda value lambda use fitResult. ematMerged matrix gene expression genes samples. sampleMetadata data.frame sample metadata. annoLevels Named list used make annotation argument passed pheatmap::pheatmap(). name must correspond column name sampleMetadata, item list must vector values found particular column. annoColors Passed annotation_colors argument pheatmap::pheatmap(). clusterTogether logical indicating whether cluster samples dataset together separately. geneIdOrder Optional character array Entrez Gene IDs specifying order genes. NA (default), order makeCoefDt() used. className column sampleMetadata containing values response variable. classLevels Order classes column annotations. org Name package mapping Entrez Gene IDs gene symbols, passed data argument annotate::lookUp(). maxVal Maximum absolute value scaled centered gene expression, used control dynamic range color heatmap. ... Additional arguments passed pheatmap::pheatmap().","code":""},{"path":"https://metapredict.hugheylab.org/reference/plotExpressionHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of merged gene expression data. — plotExpressionHeatmap","text":"pheatmap object.","code":""},{"path":"https://metapredict.hugheylab.org/news/index.html","id":"metapredict-112","dir":"Changelog","previous_headings":"","what":"metapredict 1.1.2","title":"metapredict 1.1.2","text":"Tweaked usage data.table avoid warnings.","code":""},{"path":"https://metapredict.hugheylab.org/news/index.html","id":"metapredict-111","dir":"Changelog","previous_headings":"","what":"metapredict 1.1.1","title":"metapredict 1.1.1","text":"Revised code need globalVariables() order pass R CMD check without notes.","code":""},{"path":"https://metapredict.hugheylab.org/news/index.html","id":"metapredict-110","dir":"Changelog","previous_headings":"","what":"metapredict 1.1.0","title":"metapredict 1.1.0","text":"Switched data.table hood.","code":""},{"path":"https://metapredict.hugheylab.org/news/index.html","id":"metapredict-104","dir":"Changelog","previous_headings":"","what":"metapredict 1.0.4","title":"metapredict 1.0.4","text":"Updated links vignette download data Bhattacharjee study.","code":""},{"path":"https://metapredict.hugheylab.org/news/index.html","id":"metapredict-103","dir":"Changelog","previous_headings":"","what":"metapredict 1.0.3","title":"metapredict 1.0.3","text":"Fixed bug mapping probes genes platforms caused mixing characters integers. Enabled support gzipped series matrix files.","code":""},{"path":"https://metapredict.hugheylab.org/news/index.html","id":"metapredict-102","dir":"Changelog","previous_headings":"","what":"metapredict 1.0.2","title":"metapredict 1.0.2","text":"Vignettes now properly link documentation.","code":""},{"path":"https://metapredict.hugheylab.org/news/index.html","id":"metapredict-101","dir":"Changelog","previous_headings":"","what":"metapredict 1.0.1","title":"metapredict 1.0.1","text":"Added pkgdown site. Updated roxygen-based documentation. installCustomCdfPackages now uses latest BrainArray version. metapredict now works updated glmnet::predict.glmnet.","code":""}]
